{"version":3,"file":"static/js/691.e2d67e74.chunk.js","mappings":"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","sources":["components/FilmsList.jsx/FilmsList.styled.jsx","components/FilmsList.jsx/FilmsList.jsx","pages/Movies/Movies.styled.jsx","pages/Movies/Movies.jsx","utils/api.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const FilmsContainer = styled.ul`\n  margin-top: 16px;\n  margin-bottom: 24px;\n  display: flex;\n  flex-wrap: wrap;\n  gap: 16px;\n  justify-content: center;\n  list-style: none;\n`;\n\nexport const FilmItem = styled.li`\n  cursor: pointer;\n  transition: all;\n  border-radius: 10px;\n  transition: all 0.2s cubic-bezier(0.4, 0, 0.2, 1);\n  &:hover {\n    transform: scale(1.03) translateZ(0);\n    transition: all 0.2s cubic-bezier(0.4, 0, 0.2, 1);\n  }\n`;\n\nexport const FilmPoster = styled.img`\n  border-radius: inherit;\n  box-shadow: 0px 3px 4px 1px rgba(44, 133, 200, 0.2);\n`;\n\nexport const FilmTitle = styled.h2`\n  font-size: 16px;\n  font-weight: 700;\n`;\n","import { IMG_W300, BASE_IMG_URL } from 'utils/api';\nimport {\n  FilmsContainer,\n  FilmItem,\n  FilmPoster,\n  FilmTitle,\n} from './FilmsList.styled';\nimport { Link } from 'react-router-dom';\n\nexport const FilmsList = ({ films }) => {\n  return (\n    <FilmsContainer>\n      {films.map(({ id, title, poster_path }) => {\n        return (\n          <Link to={`/movies/${id}`} key={id}>\n            <FilmItem>\n              <FilmPoster\n                src={`${BASE_IMG_URL}${IMG_W300}${poster_path}`}\n                alt={title}\n              />\n              <FilmTitle>{title}</FilmTitle>\n            </FilmItem>\n          </Link>\n        );\n      })}\n    </FilmsContainer>\n  );\n};\n","import styled from 'styled-components';\n\nexport const SearchForm = styled.form`\n  display: flex;\n  justify-content: center;\n`;","import { SearchForm } from './Movies.styled';\nimport { useState, useEffect } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport { toast } from 'react-toastify';\nimport { getSearchMovie } from 'utils/api';\nimport { FilmsList } from 'components/FilmsList.jsx/FilmsList';\n\nconst Movies = () => {\n  const [query, setQuery] = useState('');\n  const [films, setFilms] = useState([]);\n  const [searchParams, setSearchParams] = useSearchParams();\n\n  const searchFilms = event => {\n    event.preventDefault();\n    console.log(event.target.findForm.value);\n    if (query.trim() === '') {\n      return toast('Nothing entered', { autoClose: 1000 });\n    }\n    setFilms([]);\n    setSearchParams(query !== '' ? { query: query } : {});\n    setQuery('');\n  };\n\n  const searchQuery = searchParams.get('query') ?? '';\n\n  useEffect(() => {\n    if (!searchQuery) {\n      return;\n    }\n    getSearchMovie(searchQuery).then(({ total_pages, results }) =>\n      setFilms(results)\n    );\n  }, [searchQuery]);\n\n  return (\n    <main>\n      <SearchForm onSubmit={searchFilms}>\n        <input\n          type=\"text\"\n          name=\"findForm\"\n          placeholder=\"Search films\"\n          onChange={event => setQuery(event.currentTarget.value)}\n        />\n        <button type=\"submit\">Search</button>\n      </SearchForm>\n      <FilmsList films={films} />\n    </main>\n  );\n};\n\nexport default Movies;\n","import axios from \"axios\";\n\nconst API_KEY = '029dc938f69f80a53ec2361c42a2c79e';\nconst BASE_URL = 'https://api.themoviedb.org/3';\n\naxios.defaults.baseURL = BASE_URL;\n\nexport const BASE_IMG_URL = `https://image.tmdb.org/t/p`;\nexport const IMG_W500 = `/w500`;\nexport const IMG_W400 = `/w400`;\nexport const IMG_W300 = `/w300`;\nexport const IMG_W200 = `/w200`;\nexport const IMG_W100 = `/w100`;\nexport const IMG_ORIG = `/original`;\n\nexport const getTrending = async (page = 1) => {\n    const { data } = await axios.get(\n        `/trending/movie/week?api_key=${API_KEY}&page=${page}`\n    );\n    return data;\n};\n\nexport const getFilmById = async (id) => {\n    const { data } = await axios.get(\n        `/movie/${id}?api_key=${API_KEY}`\n    );\n    console.log(data)\n    return data;\n};\n\nexport const getMovieCast = async id => {\n    const { data } = await axios.get(`/movie/${id}/credits?api_key=${API_KEY}`);\n    return data;\n};\n\nexport const getMovieReviews = async id => {\n    const { data } = await axios.get(`/movie/${id}/reviews?api_key=${API_KEY}`);\n    return data;\n};\n\nexport const getSearchMovie = async (query, page) => {\n    const { data } = await axios.get(\n        `/search/movie?api_key=${API_KEY}&language=en-US&query=${query}&page=${page}`\n    );\n    return data;\n};\n"],"names":["FilmsContainer","styled","FilmItem","FilmPoster","FilmTitle","FilmsList","films","map","id","title","poster_path","to","src","BASE_IMG_URL","IMG_W300","alt","SearchForm","useState","query","setQuery","setFilms","useSearchParams","searchParams","setSearchParams","searchQuery","get","useEffect","getSearchMovie","then","total_pages","results","onSubmit","event","preventDefault","console","log","target","findForm","value","trim","toast","autoClose","type","name","placeholder","onChange","currentTarget","API_KEY","axios","IMG_W200","getTrending","page","data","getFilmById","getMovieCast","getMovieReviews"],"sourceRoot":""}